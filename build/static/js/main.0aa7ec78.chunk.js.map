{"version":3,"sources":["App.js","index.js"],"names":["App","validadtionLogin","yup","shape","email","required","password","min","validadtionRegister","confirmPassword","oneOf","initialValues","onSubmit","values","console","log","validationSchema","className","name","placeholder","component","placeHolder","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMA8FeA,EA1FH,WAER,IACMC,EAAmBC,MAAaC,MAAM,CACxCC,MAAOF,MAENE,MAAM,gCACNC,SAAS,mCACVC,SAAUJ,MAETK,IAAI,EAAG,iDACPF,SAAS,qCAIRG,EAAsBN,MAAaC,MAAM,CAC3CC,MAAOF,MAEFE,MAAM,gCACNC,SAAS,mCACdC,SAAUJ,MAELK,IAAI,EAAG,iDACPF,SAAS,mCAEdI,gBAAiBP,MAEhBQ,MAAM,CAACR,IAAQ,YAAa,MAAO,qCAGxC,OACI,qCAEI,cAAC,IAAD,CAAQS,cAAe,GAAIC,SA/BV,SAACC,GAAD,OAAYC,QAAQC,IAAIF,IA+BcG,iBAAkBf,EAAzE,SAGI,0BAASgB,UAAU,aAAnB,UACI,uCACA,eAAC,IAAD,CAAMA,UAAU,aAAhB,UAEI,sBAAKA,UAAU,mBAAf,UACI,cAAC,IAAD,CAAOC,KAAK,QAAQD,UAAU,mBAAmBE,YAAY,UAC7D,cAAC,IAAD,CAAcC,UAAU,OAAOF,KAAK,QAAQD,UAAU,kBAE1D,sBAAKA,UAAU,mBAAf,UACI,cAAC,IAAD,CAAOC,KAAK,WAAWD,UAAU,aAAaI,YAAY,UAC1D,cAAC,IAAD,CAAcD,UAAU,OAAOF,KAAK,WAAWD,UAAU,kBAE7D,wBAAQA,UAAU,SAAUK,KAAK,SAAjC,2BAQZ,cAAC,IAAD,CAAQX,cAAe,GAAIC,SA1CP,SAACC,GAAD,OAAYC,QAAQC,IAAKF,IA0CaG,iBAAkBR,EAA5E,SAGI,0BAASS,UAAU,aAAnB,UACI,0CACA,eAAC,IAAD,CAAMA,UAAU,aAAhB,UAEI,sBAAKA,UAAU,mBAAf,UACI,cAAC,IAAD,CAAOC,KAAK,QAAQD,UAAU,mBAAmBE,YAAY,UAC7D,cAAC,IAAD,CAAcC,UAAU,OAAOF,KAAK,QAAQD,UAAU,kBAE1D,sBAAKA,UAAU,mBAAf,UACI,cAAC,IAAD,CAAOC,KAAK,WAAWD,UAAU,aAAaI,YAAY,UAC1D,cAAC,IAAD,CAAcD,UAAU,OAAOF,KAAK,WAAWD,UAAU,kBAE7D,sBAAKA,UAAU,mBAAf,UACI,cAAC,IAAD,CAAOC,KAAK,kBAAkBD,UAAU,aAAaI,YAAY,oBACjE,cAAC,IAAD,CAAcD,UAAU,OAAOF,KAAK,kBAAkBD,UAAU,kBAEpE,wBAAQA,UAAU,SAASK,KAAK,SAAhC,mCC1ExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0aa7ec78.chunk.js","sourcesContent":["import react from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport \"./App.css\"\nconst App = () => {\n\n    const handleClickLogin = (values) => console.log(values);\n    const validadtionLogin = yup.object().shape({\n        email: yup\n        .string()\n        .email(\"Não é um email valido!\")\n        .required(\"Este campo é obrigatório!\"),\n        password: yup\n        .string()\n        .min(8, \"A senha deve conter no mínino 8 caracteres\")\n        .required(\"Este campo é obrigatório!\"),\n    });\n\n    const handleClickRegister = (values) => console.log (values);\n    const validadtionRegister = yup.object().shape({\n        email: yup\n            .string()\n            .email(\"Não é um email valido!\")\n            .required(\"Este campo é obrigatório!\"),\n        password: yup\n            .string()\n            .min(8, \"A senha deve conter no mínino 8 caracteres\")\n            .required(\"Este campo é obrigatório!\"),\n\n        confirmPassword: yup\n        .string()\n        .oneOf([yup.ref(\"password\"), null], \"As senhas não são iguais!\"),\n    });\n\n    return (\n        <>\n            \n            <Formik initialValues={{}} onSubmit={handleClickLogin} validationSchema={validadtionLogin} >\n               \n               \n                <section className=\"login-cont\">\n                    <h1>Login</h1>\n                    <Form className=\"login-form\">\n                        \n                        <div className=\"login-form-group\">\n                            <Field name=\"email\" className=\"form-field-email\" placeholder=\"Email\" />\n                            <ErrorMessage component=\"span\" name=\"email\" className=\"form-error\" />\n                        </div>\n                        <div className=\"login-form-group\" >\n                            <Field name=\"password\" className=\"form-field\" placeHolder=\"Senha\" />\n                            <ErrorMessage component=\"span\" name=\"password\" className=\"form-error\" />\n                        </div>\n                        <button className=\"button\"  type=\"submit\">Login</button>\n                    </Form>\n                </section>\n\n            </Formik>\n\n\n            \n            <Formik initialValues={{}} onSubmit={handleClickRegister} validationSchema={validadtionRegister} >\n\n\n                <section className=\"login-cont\" >\n                    <h1>Cadastro</h1>\n                    <Form className=\"login-form\">\n                       \n                        <div className=\"login-form-group\">\n                            <Field name=\"email\" className=\"form-field-email\" placeholder=\"Email\" />\n                            <ErrorMessage component=\"span\" name=\"email\" className=\"form-error\" />\n                        </div>\n                        <div className=\"login-form-group\">\n                            <Field name=\"password\" className=\"form-field\" placeHolder=\"Senha\" />\n                            <ErrorMessage component=\"span\" name=\"password\" className=\"form-error\" />\n                        </div>\n                        <div className=\"login-form-group\">\n                            <Field name=\"confirmPassword\" className=\"form-field\" placeHolder=\"Confirmar Senha\" />\n                            <ErrorMessage component=\"span\" name=\"confirmPassword\" className=\"form-error\" />\n                        </div>\n                        <button className=\"button\" type=\"submit\">Cadastrar</button>\n             \n\n                </Form>\n\n                </section>\n\n            </Formik>\n            \n\n\n        </>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}